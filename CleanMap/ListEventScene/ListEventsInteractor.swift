//
//  ListEventsInteractor.swift
//  CleanMap
//
//  Created by Paul Lee on 2018/5/30.
//  Copyright (c) 2018å¹´ Paul Lee. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListEventsBusinessLogic {
  func fetchEvents(request: ListEvents.FetchEvents.Request)
}

protocol ListEventsDataStore {
  var fetchedEvents: [Event] { get set }
}

class ListEventsInteractor: ListEventsBusinessLogic, ListEventsDataStore {
  
  var presenter: ListEventsPresentationLogic?
  var worker: EventsWorker? = EventsWorker(store: EventsAPI())
  var fetchedEvents: [Event] = []
  
  //MARK: - Fetch Events
  func fetchEvents(request: ListEvents.FetchEvents.Request) {
    worker?.fetchEvents(request: request, completion: { (eventsResult) in
      typealias Response = ListEvents.FetchEvents.Response
      
      guard let newFetchedEvents = eventsResult.value else {
        print("some error occur, make sure you have your api keys entered...")
        //TODO:// error handling
        let response = Response(events: [], error: nil)
        self.presenter?.presentFetchedEvents(response: response)
        return
      }
      self.fetchedEvents += newFetchedEvents
      
      
      let response = Response(events: eventsResult.value!, error: nil)
      self.presenter?.presentFetchedEvents(response: response)
      
    })
    
  }
  
}
